{"version":3,"sources":["components/Sort.js","components/Filter.js","components/Table.js","index.js","App.js"],"names":["Sort","props","className","onChange","target","value","Filter","type","checked","Table","ReactDOM","render","useState","setSort","setFilter","document","getElementById"],"mappings":"wLAEe,SAASA,EAAKC,GACzB,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yCAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,4BAAQA,UAAU,gBAAgBC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBH,EAAME,SAASC,EAAOC,SAC9E,wCACA,wCACA,0CCXT,SAASC,EAAOL,GAC3B,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,2BACIK,KAAK,WACLF,MAAM,SACNF,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBH,EAAME,SAASC,EAAOI,YAEpD,2BAAON,UAAU,OAAjB,kBCTL,SAASO,EAAMR,GAC1B,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SAAf,MACA,yBAAKA,UAAU,SAAf,QACA,yBAAKA,UAAU,SAAf,QACA,yBAAKA,UAAU,SAAf,QACA,yBAAKA,UAAU,SAAf,WCJhBQ,IAASC,OAAO,mBCGD,WAAgB,IAAD,EACJC,mBAAS,MADL,mBACfC,GADe,aAEAD,mBAAS,SAFT,mBAEbE,GAFa,WAI5B,OACE,6BACC,wBAAIZ,UAAU,OAAd,sBACA,kBAACF,EAAD,CAAMG,SAMT,SAA4BE,GAASQ,EAAQR,MAL1C,kBAACC,EAAD,CAAQH,SAQX,SAA2BK,GAAW,OAAiBM,IAAVN,MAP1C,kBAACC,EAAD,SDZW,MAASM,SAASC,eAAe,U","file":"static/js/main.593677e7.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Sort(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div>SORT BY</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <select className=\"form-control \" onChange={({ target }) => props.onChange(target.value)}>\n                        <option>NAME</option>\n                        <option>DEPT</option>\n                        <option>ID</option>\n                    </select>\n                </div>\n            </div>\n        </div >\n    );\n}","import React from \"react\";\n\nexport default function Filter(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <input\n                        type=\"checkbox\"\n                        value=\"server\"\n                        onChange={({ target }) => props.onChange(target.checked)}\n                    />\n                    <label className=\"m-1\">SHOW SERVER</label>\n                </div>\n            </div>\n        </div >\n    );\n}","import React from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function Table(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-1\">id</div>\n                <div className=\"col-2\">name</div>\n                <div className=\"col-3\">role</div>\n                <div className=\"col-4\">dept</div>\n                <div className=\"col-5\">email</div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","import React, { useState} from \"react\";\nimport Sort from \"./components/Sort\";\nimport Filter from \"./components/Filter\";\nimport Table from \"./components/Table\";\nimport Row from \"./components/Row\";\nimport { employees } from \"./Employees\";\n\n\n\n\nexport default function App() {\n  const [sort, setSort] = useState(\"id\");\n  const [filter, setFilter] = useState(\"false\");\n\n  return (\n    <div>\n     <h1 className=\"App\">EMPLOYEE DIRECTORY</h1>\n     <Sort onChange={handleSortOnChange} />\n     <Filter onChange={handleFilterCheck} />\n     <Table />\n    </div>\n  );\n\n  function handleSortOnChange(value) { setSort(value) }\n\n  \n  function handleFilterCheck(checked) { return checked ? setFilter(true) : setFilter(false) }\n\n  \n  function conditionalRender() {\n    if (sort === \"id\") {\n      if (filter) return filtered()\n      else return sorted(\"id\");\n    }\n    if (sort === \"name\") {\n      if (filter) return filtered()\n      else return sorted(\"name\");\n    }\n    if (sort === \"dept\") {\n      if (filter) return filtered()\n      else return sorted(\"dept\");\n    }\n  }\n\n  \n  function filtered() {\n    let filteredArray;\n    filteredArray = employees.filtered(e => e.role.toLocaleLowerCase().search(\"server\") >= 0);\n    return filteredArray.map(emp => <Row id={emp.id} key={emp.id} name={emp.name} role={emp.role} dept={emp.dept} email={emp.email} />);\n  }\n\n  function sorted(sort) {\n    let sortedArray = [];\n    switch (sort) {\n      case \"name\":\n        sortedArray = employees.sorted((a, b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n        break;\n      case \"id\":\n        sortedArray = employees.sorted((a, b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0));\n        break;\n      case \"dept\":\n        sortedArray = employees.sorted((a, b) => (a.dept > b.dept) ? 1 : ((b.dept > a.dept) ? -1 : 0));\n        break;\n      default:\n    }\n    return sortedArray.map(emp => <Row id={emp.id} key={emp.id} name={emp.name} role={emp.role} dept={emp.dept} email={emp.email} />);\n  }\n}\n\n\n"],"sourceRoot":""}